name: Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log into registry ghcr.io
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for worker
        id: meta-worker
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/temporalio/reference-app-orders-go-worker
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for api
        id: meta-api
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/temporalio/reference-app-orders-go-api
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for codec-server
        id: meta-codec-server
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/temporalio/reference-app-orders-go-codec-server
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push oms-go-worker Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          platforms: linux/amd64,linux/arm64
          target: oms-worker
          tags: ${{ steps.meta-worker.outputs.tags }}
          labels: ${{ steps.meta-worker.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}

      - name: Build and push oms-go-api Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          platforms: linux/amd64,linux/arm64
          target: oms-api
          tags: ${{ steps.meta-api.outputs.tags }}
          labels: ${{ steps.meta-api.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}

      - name: Build and push oms-go-codec-server Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          platforms: linux/amd64,linux/arm64
          target: oms-codec-server
          tags: ${{ steps.meta-codec-server.outputs.tags }}
          labels: ${{ steps.meta-codec-server.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
